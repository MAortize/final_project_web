{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Nueva carpeta (2)\\\\definitivo_signodePregunta\\\\WebDevelopment\\\\Proyecto\\\\arepasApp\\\\src\\\\components\\\\crud\\\\CrudApiProducto.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CrudFormProduct from './CrudFormProduct';\nimport CrudTableProduct from './CrudTableProduct';\nimport Loader from './Loader';\nimport Message from './Message';\nimport { helpFetch } from '../../helpers/helpFetch';\nimport { readAllAction } from '../../actions/productsActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CrudApiProducto = () => {\n  _s();\n  const state = useSelector(state => state.state);\n  const dispatch = useDispatch();\n  const {\n    db\n  } = state.product;\n  const [editData, setEditData] = useState(null);\n  const [products, setProducts] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const API = helpFetch();\n  useEffect(() => {\n    setLoading(true);\n    API.get(\"products\").then(response => {\n      if (!response.error) {\n        dispatch(readAllAction(response));\n        setProducts(response);\n        setErrorMessage(null);\n      } else {\n        setProducts(null);\n        setErrorMessage(response.statusText);\n      }\n      setLoading(false);\n    });\n  }, []);\n\n  // inserción de datos\n  const addProduct = product => {\n    setLoading(true);\n    const options = {\n      body: product\n    };\n    API.post(\"products\", options).then(response => {\n      if (!response.error) {\n        setProducts([...products, product]);\n        setErrorMessage(null);\n      } else {\n        setProducts(null);\n        setErrorMessage(response.statusText);\n      }\n      setLoading(false);\n    });\n  };\n\n  // editar un producto\n  const editProduct = product => {\n    setLoading(true);\n    const options = {\n      body: product\n    };\n    API.put(\"products\", options, product.id).then(response => {\n      if (!response.error) {\n        const newProducts = products.map(el => el.id === product.id ? product : el);\n        setProducts(newProducts);\n        setEditData(null);\n        setErrorMessage(null);\n      } else {\n        setProducts(null);\n        setErrorMessage(response.statusText);\n      }\n      setLoading(false);\n    });\n  };\n\n  // Eliminar un product\n  const deleteProduct = id => {\n    setLoading(true);\n    const isDelete = window.confirm(`¿Deseas eliminar el registro con id: ${id}?`);\n    if (isDelete) {\n      API.del(\"products\", id).then(response => {\n        if (!response.error) {\n          const newProducts = products.filter(el => el.id !== id);\n          setProducts(newProducts);\n          setErrorMessage(null);\n        } else {\n          setProducts(null);\n          setErrorMessage(response.statusText);\n        }\n        setLoading(false);\n      });\n    } else {\n      setLoading(false);\n    }\n  };\n  // Aqui se usan los otros componentes para tener un visual\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"CRUD API de Productos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(CrudFormProduct, {\n      addProduct: addProduct,\n      editProduct: editProduct,\n      editData: editData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this) : products && /*#__PURE__*/_jsxDEV(CrudTableProduct, {\n      products: products\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(Message, {\n      text: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n};\n_s(CrudApiProducto, \"JNW3bwR4l4251Rs75nts6M/h+d4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = CrudApiProducto;\nexport default CrudApiProducto;\nvar _c;\n$RefreshReg$(_c, \"CrudApiProducto\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","CrudFormProduct","CrudTableProduct","Loader","Message","helpFetch","readAllAction","CrudApiProducto","state","dispatch","db","product","editData","setEditData","products","setProducts","loading","setLoading","errorMessage","setErrorMessage","API","get","then","response","error","statusText","addProduct","options","body","post","editProduct","put","id","newProducts","map","el","deleteProduct","isDelete","window","confirm","del","filter"],"sources":["C:/Users/Usuario/Desktop/Nueva carpeta (2)/definitivo_signodePregunta/WebDevelopment/Proyecto/arepasApp/src/components/crud/CrudApiProducto.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport CrudFormProduct from './CrudFormProduct'\r\nimport CrudTableProduct from './CrudTableProduct'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { helpFetch } from '../../helpers/helpFetch'\r\nimport { readAllAction } from '../../actions/productsActions';\r\n\r\nconst CrudApiProducto = () => {\r\n\r\n  const state = useSelector(state => state.state);\r\n  const dispatch = useDispatch();\r\n  const { db } = state.product;\r\n\r\n\r\n  const [editData, setEditData] = useState(null)\r\n  const [products, setProducts] = useState(null)\r\n  const [loading, setLoading] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  \r\n  const API = helpFetch()\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    API.get(\"products\").then((response) => {\r\n      if (!response.error) {\r\n        dispatch(readAllAction(response))\r\n        setProducts(response)\r\n        setErrorMessage(null)\r\n      } else {\r\n        setProducts(null)\r\n        setErrorMessage(response.statusText)\r\n      }\r\n\r\n      setLoading(false)\r\n    })    \r\n  }, [])\r\n\r\n  // inserción de datos\r\n  const addProduct = (product) => {\r\n    setLoading(true)\r\n    const options = {\r\n      body: product\r\n    }\r\n\r\n    API.post(\"products\", options).then(response => {\r\n      if (!response.error) {\r\n        setProducts([...products, product])\r\n        setErrorMessage(null)\r\n      } else {\r\n        setProducts(null)\r\n        setErrorMessage(response.statusText)\r\n      }\r\n      setLoading(false)\r\n    })\r\n  }\r\n\r\n  // editar un producto\r\n  const editProduct = (product) => {\r\n    setLoading(true)\r\n    const options = {\r\n      body: product\r\n    }\r\n\r\n    API.put(\"products\", options, product.id).then(response => {\r\n      if (!response.error) {\r\n        const newProducts = products.map(el => el.id === product.id ? product : el)\r\n        setProducts(newProducts)\r\n        setEditData(null)\r\n        setErrorMessage(null)\r\n      } else {\r\n        setProducts(null)\r\n        setErrorMessage(response.statusText)\r\n      }\r\n\r\n      setLoading(false)\r\n    })\r\n  }\r\n\r\n  // Eliminar un product\r\n  const deleteProduct = id => {\r\n    setLoading(true)\r\n    const isDelete = window.confirm(`¿Deseas eliminar el registro con id: ${id}?`)\r\n\r\n    if (isDelete) {\r\n      API.del(\"products\", id).then( response => {\r\n        if (!response.error) {\r\n          const newProducts = products.filter(el => el.id !== id)\r\n          setProducts(newProducts)\r\n          setErrorMessage(null)\r\n        } else {\r\n          setProducts(null)\r\n          setErrorMessage(response.statusText)\r\n        }\r\n  \r\n        setLoading(false)\r\n      })\r\n    } else {\r\n      setLoading(false)\r\n    }\r\n  }\r\n  // Aqui se usan los otros componentes para tener un visual\r\n  return <>\r\n    <h2>CRUD API de Productos</h2>\r\n    <CrudFormProduct addProduct={addProduct} editProduct={editProduct} editData={editData}/>\r\n    { \r\n      loading\r\n      ? <Loader />\r\n      : products && <CrudTableProduct products={products} /> \r\n    }\r\n    { errorMessage && <Message text={errorMessage}/> }\r\n  </>\r\n}\r\n\r\nexport default CrudApiProducto"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}