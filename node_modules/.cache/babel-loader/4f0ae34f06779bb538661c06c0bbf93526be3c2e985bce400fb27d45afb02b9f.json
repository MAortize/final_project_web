{"ast":null,"code":"export const helpFetch = () => {\n  //se dispone una url abierta/ para que en el endpoint llege al json que se necesite\n  const URL = \"http://localhost:3001/\";\n  const customFetch = async function (endpoint) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    options.method = options.method || \"GET\";\n    options.headers = {\n      \"content-type\": \"application/json\"\n    };\n    if (options.body) {\n      options.body = JSON.stringify(options.body);\n    }\n    try {\n      const response = await fetch(`${URL}${endpoint}`, options);\n      return await (response.ok ? response.json() : Promise.reject({\n        error: true,\n        status: response.status,\n        statusText: response.statusText\n      }));\n    } catch (error) {\n      return {\n        error: true,\n        statusText: \"Error: No se ha logrado la petición.\"\n      };\n    }\n  };\n  const get = endpoint => customFetch(endpoint);\n  const post = (endpoint, options) => {\n    options.method = \"POST\";\n    return customFetch(endpoint, options);\n  };\n  const put = (endpoint, options, id) => {\n    options.method = \"PUT\";\n    return customFetch(`${endpoint}/${id}`, options);\n  };\n  const del = (endpoint, id) => {\n    const options = {\n      method: \"DELETE\"\n    };\n    return customFetch(`${endpoint}/${id}`, options);\n  };\n  const tab = endpoint => {\n    const options = {\n      method: \"GET\"\n    };\n    let pag = \"?_page=1&_limit=10\";\n    return customFetch(`${endpoint}/${pag}`, options);\n  };\n  const sort = (endpoint, sor) => {\n    const options = {\n      method: \"GET\"\n    };\n    let busca = sor;\n    let buscador = \"?_sort=\" + busca;\n    return customFetch(`${endpoint}${buscador}`, options);\n  };\n  return {\n    get,\n    post,\n    put,\n    del,\n    tab,\n    sort\n  };\n};","map":{"version":3,"names":["helpFetch","URL","customFetch","endpoint","options","method","headers","body","JSON","stringify","response","fetch","ok","json","Promise","reject","error","status","statusText","get","post","put","id","del","tab","pag","sort","sor","busca","buscador"],"sources":["C:/Users/Usuario/Desktop/Nueva carpeta (2)/definitivo_signodePregunta/WebDevelopment/Proyecto/arepasApp/src/helpers/helpFetch.js"],"sourcesContent":["export const helpFetch = () => {\r\n    //se dispone una url abierta/ para que en el endpoint llege al json que se necesite\r\n    const URL = \"http://localhost:3001/\"\r\n  \r\n    const customFetch = async (endpoint, options = {}) => {\r\n      options.method = options.method || \"GET\"\r\n      options.headers = {\r\n        \"content-type\": \"application/json\"\r\n      }\r\n  \r\n      if (options.body) {\r\n        options.body = JSON.stringify(options.body)\r\n      }\r\n      try {\r\n        const response = await fetch(`${URL}${endpoint}`, options)\r\n        return await (response.ok\r\n          ? response.json()\r\n          : Promise.reject({\r\n            error: true,\r\n            status: response.status,\r\n            statusText: response.statusText\r\n          }))\r\n      } catch (error) {\r\n        return {\r\n          error: true,\r\n          statusText: \"Error: No se ha logrado la petición.\"\r\n        }\r\n      }\r\n    }\r\n  \r\n    const get = (endpoint) => customFetch(endpoint)\r\n  \r\n    const post = (endpoint, options) => {\r\n      options.method = \"POST\"\r\n      return customFetch(endpoint, options)\r\n    }\r\n  \r\n    const put = (endpoint, options, id) => {\r\n      options.method = \"PUT\"\r\n      return customFetch(`${endpoint}/${id}`, options)\r\n    }\r\n  \r\n    const del = (endpoint, id) => {\r\n      const options = {\r\n        method: \"DELETE\"\r\n      }\r\n      return customFetch(`${endpoint}/${id}`, options)\r\n    }\r\n\r\n    const tab = (endpoint) => {\r\n      const options = {\r\n        method: \"GET\"\r\n      }\r\n      let pag = \"?_page=1&_limit=10\"\r\n      return customFetch(`${endpoint}/${pag}`, options)\r\n    }\r\n\r\n    const sort = (endpoint,sor) => {\r\n      const options = {\r\n        method: \"GET\"\r\n      }\r\n      let busca = sor\r\n      let buscador = \"?_sort=\"+busca\r\n      return customFetch(`${endpoint}${buscador}`, options)\r\n    }\r\n  \r\n    return { get, post, put, del, tab , sort }\r\n  }"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,MAAM;EAC3B;EACA,MAAMC,GAAG,GAAG,wBAAwB;EAEpC,MAAMC,WAAW,GAAG,gBAAOC,QAAQ,EAAmB;IAAA,IAAjBC,OAAO,uEAAG,CAAC,CAAC;IAC/CA,OAAO,CAACC,MAAM,GAAGD,OAAO,CAACC,MAAM,IAAI,KAAK;IACxCD,OAAO,CAACE,OAAO,GAAG;MAChB,cAAc,EAAE;IAClB,CAAC;IAED,IAAIF,OAAO,CAACG,IAAI,EAAE;MAChBH,OAAO,CAACG,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACL,OAAO,CAACG,IAAI,CAAC;IAC7C;IACA,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,GAAI,GAAEE,QAAS,EAAC,EAAEC,OAAO,CAAC;MAC1D,OAAO,OAAOM,QAAQ,CAACE,EAAE,GACrBF,QAAQ,CAACG,IAAI,EAAE,GACfC,OAAO,CAACC,MAAM,CAAC;QACfC,KAAK,EAAE,IAAI;QACXC,MAAM,EAAEP,QAAQ,CAACO,MAAM;QACvBC,UAAU,EAAER,QAAQ,CAACQ;MACvB,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,OAAOF,KAAK,EAAE;MACd,OAAO;QACLA,KAAK,EAAE,IAAI;QACXE,UAAU,EAAE;MACd,CAAC;IACH;EACF,CAAC;EAED,MAAMC,GAAG,GAAIhB,QAAQ,IAAKD,WAAW,CAACC,QAAQ,CAAC;EAE/C,MAAMiB,IAAI,GAAG,CAACjB,QAAQ,EAAEC,OAAO,KAAK;IAClCA,OAAO,CAACC,MAAM,GAAG,MAAM;IACvB,OAAOH,WAAW,CAACC,QAAQ,EAAEC,OAAO,CAAC;EACvC,CAAC;EAED,MAAMiB,GAAG,GAAG,CAAClB,QAAQ,EAAEC,OAAO,EAAEkB,EAAE,KAAK;IACrClB,OAAO,CAACC,MAAM,GAAG,KAAK;IACtB,OAAOH,WAAW,CAAE,GAAEC,QAAS,IAAGmB,EAAG,EAAC,EAAElB,OAAO,CAAC;EAClD,CAAC;EAED,MAAMmB,GAAG,GAAG,CAACpB,QAAQ,EAAEmB,EAAE,KAAK;IAC5B,MAAMlB,OAAO,GAAG;MACdC,MAAM,EAAE;IACV,CAAC;IACD,OAAOH,WAAW,CAAE,GAAEC,QAAS,IAAGmB,EAAG,EAAC,EAAElB,OAAO,CAAC;EAClD,CAAC;EAED,MAAMoB,GAAG,GAAIrB,QAAQ,IAAK;IACxB,MAAMC,OAAO,GAAG;MACdC,MAAM,EAAE;IACV,CAAC;IACD,IAAIoB,GAAG,GAAG,oBAAoB;IAC9B,OAAOvB,WAAW,CAAE,GAAEC,QAAS,IAAGsB,GAAI,EAAC,EAAErB,OAAO,CAAC;EACnD,CAAC;EAED,MAAMsB,IAAI,GAAG,CAACvB,QAAQ,EAACwB,GAAG,KAAK;IAC7B,MAAMvB,OAAO,GAAG;MACdC,MAAM,EAAE;IACV,CAAC;IACD,IAAIuB,KAAK,GAAGD,GAAG;IACf,IAAIE,QAAQ,GAAG,SAAS,GAACD,KAAK;IAC9B,OAAO1B,WAAW,CAAE,GAAEC,QAAS,GAAE0B,QAAS,EAAC,EAAEzB,OAAO,CAAC;EACvD,CAAC;EAED,OAAO;IAAEe,GAAG;IAAEC,IAAI;IAAEC,GAAG;IAAEE,GAAG;IAAEC,GAAG;IAAGE;EAAK,CAAC;AAC5C,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}