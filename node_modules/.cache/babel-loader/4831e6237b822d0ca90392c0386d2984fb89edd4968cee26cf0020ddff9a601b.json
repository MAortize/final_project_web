{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Usuario\\\\Desktop\\\\Nueva carpeta (2)\\\\definitivo_signodePregunta\\\\WebDevelopment\\\\Proyecto\\\\arepasApp\\\\src\\\\components\\\\crud\\\\CrudApiProducto.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CrudFormProduct from './CrudFormProduct';\nimport CrudTableProduct from './CrudTableProduct';\nimport Loader from './Loader';\nimport Message from './Message';\nimport { helpFetch } from '../../helpers/helpFetch';\nimport { noAction, readAllAction } from '../../actions/productsActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CrudApiProducto = () => {\n  _s();\n  const state = useSelector(state => state.state);\n  const dispatch = useDispatch();\n  const {\n    db\n  } = state;\n  const [editData, setEditData] = useState(null);\n  const [products, setProducts] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const API = helpFetch();\n  useEffect(() => {\n    setLoading(true);\n    API.get(\"products\").then(response => {\n      if (!response.error) {\n        dispatch(readAllAction(response));\n        // setProducts(response)\n        // setErrorMessage(null)\n      } else {\n        dispatch(noAction);\n        setProducts(null);\n        setErrorMessage(response.statusText);\n      }\n      setLoading(false);\n    });\n  }, [\"products\", dispatch]);\n\n  // inserción de datos\n  const addProduct = product => {\n    setLoading(true);\n    const options = {\n      body: product\n    };\n    API.post(\"products\", options).then(response => {\n      if (!response.error) {\n        setProducts([...products, product]);\n        setErrorMessage(null);\n      } else {\n        setProducts(null);\n        setErrorMessage(response.statusText);\n      }\n      setLoading(false);\n    });\n  };\n\n  // editar un producto\n  const editProduct = product => {\n    setLoading(true);\n    const options = {\n      body: product\n    };\n    API.put(\"products\", options, product.id).then(response => {\n      if (!response.error) {\n        const newProducts = products.map(el => el.id === product.id ? product : el);\n        setProducts(newProducts);\n        setEditData(null);\n        setErrorMessage(null);\n      } else {\n        setProducts(null);\n        setErrorMessage(response.statusText);\n      }\n      setLoading(false);\n    });\n  };\n\n  // Eliminar un product\n  const deleteProduct = id => {\n    setLoading(true);\n    const isDelete = window.confirm(`¿Deseas eliminar el registro con id: ${id}?`);\n    if (isDelete) {\n      API.del(\"products\", id).then(response => {\n        if (!response.error) {\n          const newProducts = products.filter(el => el.id !== id);\n          setProducts(newProducts);\n          setErrorMessage(null);\n        } else {\n          setProducts(null);\n          setErrorMessage(response.statusText);\n        }\n        setLoading(false);\n      });\n    } else {\n      setLoading(false);\n    }\n  };\n  // Aqui se usan los otros componentes para tener un visual\n  // return <>\n  //   <h2>CRUD API de Productos</h2>\n  //   <CrudFormProduct addProduct={addProduct} editProduct={editProduct} editData={editData}/>\n  //   { \n  //     loading\n  //     ? <Loader />\n  //     : products && <CrudTableProduct products={products} /> \n  //   }\n  //   { errorMessage && <Message text={errorMessage}/> }\n  // </>\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"article\", {\n      children: db === null || db === void 0 ? void 0 : db.map(product => /*#__PURE__*/_jsxDEV(CrudTableProduct, {\n        data: product\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 31\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(CrudApiProducto, \"JNW3bwR4l4251Rs75nts6M/h+d4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = CrudApiProducto;\nexport default CrudApiProducto;\nvar _c;\n$RefreshReg$(_c, \"CrudApiProducto\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","CrudFormProduct","CrudTableProduct","Loader","Message","helpFetch","noAction","readAllAction","CrudApiProducto","state","dispatch","db","editData","setEditData","products","setProducts","loading","setLoading","errorMessage","setErrorMessage","API","get","then","response","error","statusText","addProduct","product","options","body","post","editProduct","put","id","newProducts","map","el","deleteProduct","isDelete","window","confirm","del","filter"],"sources":["C:/Users/Usuario/Desktop/Nueva carpeta (2)/definitivo_signodePregunta/WebDevelopment/Proyecto/arepasApp/src/components/crud/CrudApiProducto.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport CrudFormProduct from './CrudFormProduct'\r\nimport CrudTableProduct from './CrudTableProduct'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { helpFetch } from '../../helpers/helpFetch'\r\nimport { noAction, readAllAction } from '../../actions/productsActions';\r\n\r\nconst CrudApiProducto = () => {\r\n\r\n  const state = useSelector(state => state.state);\r\n  const dispatch = useDispatch();\r\n  const { db } = state;\r\n\r\n\r\n  const [editData, setEditData] = useState(null)\r\n  const [products, setProducts] = useState(null)\r\n  const [loading, setLoading] = useState(false)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n  \r\n  const API = helpFetch()\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    API.get(\"products\").then((response) => {\r\n      if (!response.error) {\r\n        dispatch(readAllAction(response))\r\n        // setProducts(response)\r\n        // setErrorMessage(null)\r\n      } else {\r\n        dispatch(noAction)\r\n        setProducts(null)\r\n        setErrorMessage(response.statusText)\r\n      }\r\n\r\n      setLoading(false)\r\n    })    \r\n  }, [\"products\",dispatch])\r\n\r\n  // inserción de datos\r\n  const addProduct = (product) => {\r\n    setLoading(true)\r\n    const options = {\r\n      body: product\r\n    }\r\n\r\n    API.post(\"products\", options).then(response => {\r\n      if (!response.error) {\r\n        setProducts([...products, product])\r\n        setErrorMessage(null)\r\n      } else {\r\n        setProducts(null)\r\n        setErrorMessage(response.statusText)\r\n      }\r\n      setLoading(false)\r\n    })\r\n  }\r\n\r\n  // editar un producto\r\n  const editProduct = (product) => {\r\n    setLoading(true)\r\n    const options = {\r\n      body: product\r\n    }\r\n\r\n    API.put(\"products\", options, product.id).then(response => {\r\n      if (!response.error) {\r\n        const newProducts = products.map(el => el.id === product.id ? product : el)\r\n        setProducts(newProducts)\r\n        setEditData(null)\r\n        setErrorMessage(null)\r\n      } else {\r\n        setProducts(null)\r\n        setErrorMessage(response.statusText)\r\n      }\r\n\r\n      setLoading(false)\r\n    })\r\n  }\r\n\r\n  // Eliminar un product\r\n  const deleteProduct = id => {\r\n    setLoading(true)\r\n    const isDelete = window.confirm(`¿Deseas eliminar el registro con id: ${id}?`)\r\n\r\n    if (isDelete) {\r\n      API.del(\"products\", id).then( response => {\r\n        if (!response.error) {\r\n          const newProducts = products.filter(el => el.id !== id)\r\n          setProducts(newProducts)\r\n          setErrorMessage(null)\r\n        } else {\r\n          setProducts(null)\r\n          setErrorMessage(response.statusText)\r\n        }\r\n  \r\n        setLoading(false)\r\n      })\r\n    } else {\r\n      setLoading(false)\r\n    }\r\n  }\r\n  // Aqui se usan los otros componentes para tener un visual\r\n  // return <>\r\n  //   <h2>CRUD API de Productos</h2>\r\n  //   <CrudFormProduct addProduct={addProduct} editProduct={editProduct} editData={editData}/>\r\n  //   { \r\n  //     loading\r\n  //     ? <Loader />\r\n  //     : products && <CrudTableProduct products={products} /> \r\n  //   }\r\n  //   { errorMessage && <Message text={errorMessage}/> }\r\n  // </>\r\n\r\n  return (\r\n    <div>\r\n      <article>\r\n        {db?.map((product) => <CrudTableProduct data={product}/>)}\r\n      </article>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CrudApiProducto"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}